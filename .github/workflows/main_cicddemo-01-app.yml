# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - cicdDemo-01-app

on:
  push:
    branches:
      - main
  workflow_dispatch:


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: '3.12'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: pip install -r requirements.txt
        
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/


  deploy-to-stage:
    name: Deploy to staging
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: 'Staging'
      url: ${{ steps.deploy-to-stage.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_B710AC5428FE41FCB5606E5EE08AA275 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_F2F6FC5824E248919A7828AA6DB60EE8 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_CBAD19987976429B891173FFD23D6972 }}

      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
    
      - name: 'Deploy to stage env'
        uses: azure/webapps-deploy@v3
        id: deploy-to-stage
        with:
          app-name: ${{ vars.WEBAPP_NAME }}
          slot-name: 'staging'


  release-to-prod:
    name: Deploy to production
    runs-on: ubuntu-latest
    needs: deploy-to-stage
    environment:
      name: 'Production'
      url: ${{ steps.get-default-domain.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_B710AC5428FE41FCB5606E5EE08AA275 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_F2F6FC5824E248919A7828AA6DB60EE8 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_CBAD19987976429B891173FFD23D6972 }}

      - name: Swap slots
        run: az webapp deployment slot swap --slot staging --name ${{ vars.WEBAPP_NAME }} --resource-group ${{ vars.RESOURCE_GROUP }}

      - name: Get default doamin
        id: get-default-domain
        run: |
          defaultHostName=$(az webapp show --name ${{ vars.WEBAPP_NAME }} --resource-group ${{ vars.RESOURCE_GROUP }} --query defaultHostName -o tsv)
          echo "webapp-url=https://${defaultHostName}" >> "$GITHUB_OUTPUT"
        
        